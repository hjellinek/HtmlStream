(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED "12-Feb-2025 15:19:44" {DSK}<Users>hjellinek>Projects>TrySVG>Lisp>XCCS-UNICODE-DUMPER.;15 3558   

      :CHANGES-TO (VARS XCCS-UNICODE-DUMPERCOMS)
                  (RECORDS WEB-FONT-FACE)

      :PREVIOUS-DATE " 2-Feb-2025 13:29:33" 
{DSK}<Users>hjellinek>Projects>TrySVG>Lisp>XCCS-UNICODE-DUMPER.;13)


(PRETTYCOMPRINT XCCS-UNICODE-DUMPERCOMS)

(RPAQQ XCCS-UNICODE-DUMPERCOMS (
                                (* ;; 
        "Call (WRITE-JAVASCRIPT-X-TO-U-MAPPING-TABLE :output-dir %"yy%") to write xccs_to_unicode.js")

                                (VARIABLES XCCS-TO-UNICODE-JS-FILE-NAME)
                                (FUNCTIONS WRITE-JAVASCRIPT-X-TO-U-MAPPING-TABLE)))



(* ;; "Call (WRITE-JAVASCRIPT-X-TO-U-MAPPING-TABLE :output-dir %"yy%") to write xccs_to_unicode.js")


(CL:DEFCONSTANT XCCS-TO-UNICODE-JS-FILE-NAME "xccs_to_unicode.js"
   "The name part of the JavaScript XCCS to Unicode mapping file")

(CL:DEFUN WRITE-JAVASCRIPT-X-TO-U-MAPPING-TABLE (&KEY (OUTPUT-DIR *WEB-FONT-DIRECTORY*))
   "Write the XCCS to Unicode mapping table to xccs_to_unicode.js"
   [LET* [(JS-FILE (APPLY #'PACKFILENAME.STRING (APPEND (UNPACKFILENAME.STRING OUTPUT-DIR)
                                                       (LIST 'NAME XCCS-TO-UNICODE-JS-FILE-NAME]
         (CL:FORMAT T "Writing mapping file ~A~%%" JS-FILE)
         (CL:WITH-OPEN-STREAM (STREAM (OPENSTREAM JS-FILE 'OUTPUT))
                (CL:FORMAT STREAM "// use a short temp variable name!~%%")
                (CL:FORMAT STREAM "const t = [];~2%%")
                (CL:FORMAT STREAM "// t[xccs] = unicode;~%%")
                (LET ((USED-CHARSETS (HASHARRAY (IPLUS \MAXCHARSET 1)))
                      (NUM-MAPPED-XCCS-CODES 0))
                     [for XCCS-CODE from 0 to 65535
                        do (LET* [(U-CODES (XTOUCODE? XCCS-CODE))
                                  (U-CODE (COND
                                             ((LISTP U-CODES)
                                              (CAR U-CODES))
                                             ((NUMBERP U-CODES)
                                              U-CODES)
                                             (T NIL]
                                 (CL:WHEN U-CODE
                                     (CL:INCF NUM-MAPPED-XCCS-CODES)
                                     (CL:FORMAT STREAM "t[0x~4,'0x] = 0x~4,'0x;~%%" XCCS-CODE U-CODE)
                                     (PUTHASH (\CHARSET XCCS-CODE)
                                            T USED-CHARSETS))]
                     (CL:FORMAT STREAM 
                            "// There were ~d XCCS codes among ~d charsets that mapped to Unicode~%%"
                            NUM-MAPPED-XCCS-CODES (HARRAYPROP USED-CHARSETS 'NUMKEYS))
                     (CL:FORMAT STREAM "const xccs_to_unicode = t;~%%")
                     (LET ((SORTED-CHARSETS NIL))

                          (* ;; "sort the charsets and print them out")

                          [MAPHASH USED-CHARSETS #'(LAMBDA (VAL KEY)
                                                     (CL:PUSH KEY SORTED-CHARSETS]
                          (SORT SORTED-CHARSETS #'ILESSP)
                          (CL:FORMAT STREAM "const xccs_charsets = new Set([")
                          (FOR CHARSET IN SORTED-CHARSETS DO (CL:FORMAT STREAM "0x~2,'0x, " CHARSET))
                          (CL:FORMAT STREAM "]);~%%"])
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1033 3535 (WRITE-JAVASCRIPT-X-TO-U-MAPPING-TABLE 1033 . 3535)))))
STOP

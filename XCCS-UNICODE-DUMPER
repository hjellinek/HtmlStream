(DEFINE-FILE-INFO PACKAGE "INTERLISP" READTABLE "INTERLISP" BASE 10)

(FILECREATED " 7-Nov-2024 13:49:17" {DSK}<Users>hjellinek>Projects>TrySVG>Lisp>XCCS-UNICODE-DUMPER.;35 10947  

      :CHANGES-TO (VARS XCCS-UNICODE-DUMPERCOMS)
                  (FNS PROCESS-BROWSER-FONT-METRICS)

      :PREVIOUS-DATE " 1-Nov-2024 15:14:22" 
{DSK}<Users>hjellinek>Projects>TrySVG>Lisp>XCCS-UNICODE-DUMPER.;33)


(PRETTYCOMPRINT XCCS-UNICODE-DUMPERCOMS)

(RPAQQ XCCS-UNICODE-DUMPERCOMS ((VARIABLES *WEB-CHARSET-METRICS-EXT* *WEB-CHARSET-METRICS-DOT-EXT* 
                                       *WEB-FONT-METRICS-EXT* *WEB-FONT-METRICS-DOT-EXT*)
                                (FUNCTIONS CENTIPOINTS-TO-POINTS DUMP-XCCS-UNICODE-MAPPING 
                                       WRITE-CHARSET-METRICS-FILE WRITE-FONT-METRICS-FILE)
                                (FNS PROCESS-BROWSER-FONT-METRICS)
                                (RECORDS WEB-FONT-DESCR WEB-FONT-FACE)))

(CL:DEFCONSTANT *WEB-CHARSET-METRICS-EXT* "wcm"
   "The filename extension for files that describe a charset's metrics")

(CL:DEFCONSTANT *WEB-CHARSET-METRICS-DOT-EXT* (CONCAT "." *WEB-CHARSET-METRICS-EXT*)
                                              
       "The filename extension for files that describe a charset's metrics, prepended with a dot (.)")

(CL:DEFCONSTANT *WEB-FONT-METRICS-EXT* "wfm"
   "The file extension for a web font metrics file")

(CL:DEFCONSTANT *WEB-FONT-METRICS-DOT-EXT* (CONCAT "." *WEB-FONT-METRICS-EXT*)
                                           
                           "The file extension for a web font metrics file, prepended with a dot (.)")

(DEFMACRO CENTIPOINTS-TO-POINTS (CENTIPOINTS)
   `(IQUOTIENT ,CENTIPOINTS 100))

(CL:DEFUN DUMP-XCCS-UNICODE-MAPPING ()                       (* ; "Edited  2-Sep-2024 16:23 by hdj")
                                                             (* ; "Edited 30-Aug-2024 12:24 by hdj")

   (* ;; "Dump the mapping from XCCS to Unicode character codes as JSON")
                                                             (* ; "Edited 29-Aug-2024 15:30 by hdj")
   (CL:WITH-OPEN-STREAM [OUT (OPENSTREAM "Unicode_to_XCCS.js" 'OUTPUT NIL '((FORMAT :THROUGH]
          (LINELENGTH T OUT)
          (CL:FORMAT OUT "// use a short temp variable name!~%%")
          (CL:FORMAT OUT "const t = [];~%%")
          (LET ((NUM-MAPPINGS 0)
                (MAX-XCCS 0))
               [for U from 32 to 65535 do (LET [(IN-XCCS (CONDITIONS:HANDLER-CASE (UTOXCODE U)
                                                                (INTERLISP-ERROR (E)
                                                                       NIL]
                                               (CL:IF IN-XCCS
                                                   (PROGN (CL:FORMAT OUT "t[~D]=~D;~%%" U IN-XCCS)
                                                          (CL:INCF NUM-MAPPINGS)
                                                          (SETQ MAX-XCCS (MAX MAX-XCCS IN-XCCS))))]
               (CL:FORMAT OUT "const xccs_to_unicode = t;~%%")
               (CL:FORMAT OUT "const max_xccs = ~d;~%%" MAX-XCCS)
               (CL:FORMAT OUT "const num_mappings = ~D;~%%" NUM-MAPPINGS))))

(CL:DEFUN WRITE-CHARSET-METRICS-FILE (FAMILY SIZE FACE CHARSET)
   "Write a file containing a charset's metrics"

   (* ;; "The file name looks like <family>-<size>-<weight>-<slope>-<expansion>-<charset>.wcm")

   (* ;; "For example, ROBOTO-MONO-10-REGULAR-REGULAR-REGULAR-0.wcm")

   [LET* ((WEIGHT (fetch (WEB-FONT-FACE weight) of FACE))
          (SLOPE (fetch (WEB-FONT-FACE slope) of FACE))
          (EXPANSION (fetch (WEB-FONT-FACE expansion) of FACE))
          (CHARSET-NUM (fetch (WEB-CHARSET-METRICS charset) of CHARSET))
          (HEIGHT (fetch (WEB-CHARSET-METRICS height) of CHARSET))
          (MAX-ASCENT (fetch (WEB-CHARSET-METRICS maxAscent) of CHARSET))
          (MAX-DESCENT (fetch (WEB-CHARSET-METRICS maxDescent) of CHARSET))
          (WIDTHS (fetch (WEB-CHARSET-METRICS xccsWidths) of CHARSET))
          (FILE-NAME (CL:FORMAT NIL "~A-~d-~A-~A-~A-~d.~A" FAMILY SIZE WEIGHT SLOPE EXPANSION 
                            CHARSET-NUM *WEB-CHARSET-METRICS-EXT*)))
         (CL:WITH-OPEN-STREAM (OUT (OPENSTREAM FILE-NAME 'OUTPUT 'NEW))
                (PRINT (LIST 'format *BROWSER-FONT-FILE-VERSION*)
                       OUT)
                (PRINT CHARSET OUT)
                (AND NIL (CL:FORMAT T "Wrote charset ~A~%%" FILE-NAME])

(CL:DEFUN WRITE-FONT-METRICS-FILE (FAMILY FACE SIZE HEIGHT CHARSETS MAX-ASCENT MAX-DESCENT)
   "Write a description of the font"

   (* ;; "The file name looks like <family>-<size>-<weight>-<slope>-<expansion>.wfm")

   (* ;; "For example, ROBOTO-MONO-10-REGULAR-REGULAR-REGULAR.wfm")

   [LET* ((WEIGHT (fetch (WEB-FONT-FACE weight) of FACE))
          (SLOPE (fetch (WEB-FONT-FACE slope) of FACE))
          (EXPANSION (fetch (WEB-FONT-FACE expansion) of FACE))
          (FILE-NAME (CL:FORMAT NIL "~A-~d-~A-~A-~A.~A" FAMILY SIZE WEIGHT SLOPE EXPANSION 
                            *WEB-FONT-METRICS-EXT*)))
         (CL:WITH-OPEN-STREAM (OUT (OPENSTREAM FILE-NAME 'OUTPUT 'NEW))
                (PRINT (LIST 'format *BROWSER-FONT-FILE-VERSION*)
                       OUT)
                (PRINT (create WEB-FONT-DESCR
                              name _ FAMILY
                              face _ FACE
                              size _ SIZE
                              height _ HEIGHT
                              maxAscent _ MAX-ASCENT
                              maxDescent _ MAX-DESCENT
                              charsets _ (LENGTH CHARSETS))
                       OUT)
                (AND NIL (CL:FORMAT T "Wrote font file ~A~%%" FILE-NAME])
(DEFINEQ

(PROCESS-BROWSER-FONT-METRICS
  [LAMBDA (FILE-NAME)                                        (* ; "Edited  3-Sep-2024 12:56 by hdj")

    (* ;; 
  "Read a series of font metrics from the metrics file and translate them into individual .wfm files")

    (* ;; "The file name looks like <family>-<size>-<weight>-<slope>-<expansion>.wfm")

    (* ;; "For example, ROBOTO-MONO-10-REGULAR-REGULAR-REGULAR.wfm")

    (CL:WITH-OPEN-STREAM [IN (OPENSTREAM FILE-NAME 'INPUT NIL '((FORMAT :THROUGH]

           (* ;; "read and check the version, then read the TOC")

           (LET ((VERSION (CHECK-BROWSER-METRICS-FORMAT (READ IN)))
                 (TOC (READ IN)))
                (while (SKIPSEPRS IN) do (LET* ((FONT-MEASUREMENT (READ IN))
                                                (FONT-NAME (fetch (WEB-FONT-METRICS name)
                                                              of FONT-MEASUREMENT))
                                                (FONT-FAMILY (fetch (WEB-FONT-METRICS family)
                                                                of FONT-MEASUREMENT))
                                                (FONT-SIZE (fetch (WEB-FONT-METRICS size)
                                                              of FONT-MEASUREMENT))
                                                (FONT-WEIGHT (fetch (WEB-FONT-METRICS weight)
                                                                of FONT-MEASUREMENT))
                                                (FONT-STYLE (fetch (WEB-FONT-METRICS style)
                                                               of FONT-MEASUREMENT))
                                                (LINE-HEIGHT (fetch (WEB-FONT-METRICS height)
                                                                of FONT-MEASUREMENT))
                                                (CHARSETS (fetch (WEB-FONT-METRICS charsets)
                                                             of FONT-MEASUREMENT))
                                                (MAX-ASCENT (fetch (WEB-FONT-METRICS maxAscent)
                                                               of FONT-MEASUREMENT))
                                                (MAX-DESCENT (fetch (WEB-FONT-METRICS maxDescent)
                                                                of FONT-MEASUREMENT))
                                                (FONT-LISP-NAME (MKATOM (fetch (WEB-FONT-METRICS
                                                                                lispName)
                                                                           of FONT-MEASUREMENT)))
                                                (FONT-LISP-FACE (MAPCAR (fetch (WEB-FONT-METRICS
                                                                                lispFace)
                                                                           of FONT-MEASUREMENT)
                                                                       #'MKATOM))
                                                (FONT-LISP-SIZE (fetch (WEB-FONT-METRICS lispSize)
                                                                   of FONT-MEASUREMENT)))
                                               (CL:FORMAT T 
                                "Font ~s, ~A ~A ~A: height ~d, ascent ~d, descent ~d, ~d charsets~%%"
                                                      FONT-FAMILY FONT-SIZE FONT-WEIGHT FONT-STYLE
                                                      (CENTIPOINTS-TO-POINTS LINE-HEIGHT)
                                                      (CENTIPOINTS-TO-POINTS MAX-ASCENT)
                                                      (CENTIPOINTS-TO-POINTS MAX-DESCENT)
                                                      (LENGTH CHARSETS))

                                               (* ;; "write a wfm file to describe the font itself")

                                               (WRITE-FONT-METRICS-FILE FONT-LISP-NAME FONT-LISP-FACE
                                                      FONT-LISP-SIZE LINE-HEIGHT CHARSETS MAX-ASCENT
                                                      MAX-DESCENT)
                                               (for CHARSET in CHARSETS
                                                  do 
                                                     (* ;; 
                                          "write each charset's metrics as a set of standalone files")

                                                     (WRITE-CHARSET-METRICS-FILE FONT-LISP-NAME 
                                                            FONT-LISP-SIZE FONT-LISP-FACE CHARSET])
)
(DECLARE%: EVAL@COMPILE

(RECORD WEB-FONT-DESCR (name face size height maxAscent maxDescent charsets))

(RECORD WEB-FONT-FACE (weight slope expansion))
)
(DECLARE%: DONTCOPY
  (FILEMAP (NIL (1669 1752 (CENTIPOINTS-TO-POINTS 1669 . 1752)) (1754 3280 (DUMP-XCCS-UNICODE-MAPPING 
1754 . 3280)) (3282 4616 (WRITE-CHARSET-METRICS-FILE 3282 . 4616)) (4618 5923 (WRITE-FONT-METRICS-FILE
 4618 . 5923)) (5924 10762 (PROCESS-BROWSER-FONT-METRICS 5934 . 10760)))))
STOP
